#include "stm32l4xx.h"
#include "time.h"
#include <math.h>

#define T_MOTOR 0
#define R_MOTOR 1

int step_time_us = 50000; // minimum 1us

int t_pulse_length = 1; //length moved with 1 pulse (in mm)
int r_pulse_angle = 1; //angle turned with 1 pulse (in Â°)

void send1Pulse(int n_driver){

	uint16_t GPIO_PIN;
	GPIO_PIN = (n_driver==1)?GPIO_PIN_5:GPIO_PIN_7;
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN, 1);
	delayMicroseconds(step_time_us);
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN, 0);
	delayMicroseconds(step_time_us);

}

void sendNPulse(int N, int n_driver){
	for (int i = 0; i<N; i++){
		send1Pulse(n_driver);
	}
}


void translate(int dx){
	int nb_pulses = (int)((float)dx/(float)t_pulse_length);
	sendNPulse(nb_pulses, T_MOTOR);
}

void rotate(int dtheta){
	int nb_pulses = (int)((float)dtheta/(float)r_pulse_angle);
	sendNPulse(nb_pulses, R_MOTOR);
}


void setMicrosteppingMode(int n){
	// Parameter n define the stepping mode
	// The step is 1/n
	// with n in {1,2,4,8,16}

	/*
	   Microstepping Resolution Truth Table

	   | MS1 | MS2 | MS3 | Microstep Resolution | Excitation Mode  |
	   |-----|-----|-----|----------------------|------------------|
	   |  L  |  L  |  L  | Full Step            | 2 Phase          |
	   |  H  |  L  |  L  | Half Step            | 1-2 Phase        |
	   |  L  |  H  |  L  | Quarter Step         | W1-2 Phase       |
	   |  H  |  H  |  L  | Eighth Step          | 2W1-2 Phase      |
	   |  H  |  H  |  H  | Sixteenth Step       | 4W1-2 Phase      |
	*/
	int temp = (int)log2f(n);
	int MS1 = temp&0x1;
	int MS2 = (temp&0x2)>>1;
	int MS3 = (temp&0x4)>>2;


	// PA9 -> MS1
	// PC7 -> MS2
	// PB6 -> MS3

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, MS1);
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, MS2);
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, MS3);

}

